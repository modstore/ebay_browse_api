<?php
/**
 * ItemApi
 * PHP version 7.4
 *
 * @category Class
 * @package  Modstore\EbayBrowseApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Browse API
 *
 * The Browse API has the following resources:<ul><li><b>item_summary:</b><br>Allows shoppers to search for specific items by keyword, GTIN, category, charity, product, image, or item aspects and refine the results by using filters, such as aspects, compatibility, and fields values, or UI parameters.</li><li><b>item:</b><br>Allows shoppers to retrieve the details of a specific item or all items in an item group, which is an item with variations such as color and size and check if a product is compatible with the specified item, such as if a specific car is compatible with a specific part.<br><br>This resource also provides a bridge between the eBay legacy APIs, such as the <a href=\"/api-docs/user-guides/static/finding-user-guide-landing.html\" target=\"_blank\">Finding</b>, and the RESTful APIs, which use different formats for the item IDs.</li></ul>The <b>item_summary</b>, <b>search_by_image</b>, and <b>item</b> resource calls require an <a href=\"/api-docs/static/oauth-client-credentials-grant.html\" target=\"_blank\">Application access token</a>.
 *
 * The version of the OpenAPI document: v1.19.9
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.8.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Modstore\EbayBrowseApi\Api;

use GuzzleHttp\Client;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Exception\ConnectException;
use GuzzleHttp\Exception\RequestException;
use GuzzleHttp\Psr7\MultipartStream;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\RequestOptions;
use Modstore\EbayBrowseApi\ApiException;
use Modstore\EbayBrowseApi\Configuration;
use Modstore\EbayBrowseApi\HeaderSelector;
use Modstore\EbayBrowseApi\ObjectSerializer;

/**
 * ItemApi Class Doc Comment
 *
 * @category Class
 * @package  Modstore\EbayBrowseApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ItemApi
{
    /**
     * @var ClientInterface
     */
    protected $client;

    /**
     * @var Configuration
     */
    protected $config;

    /**
     * @var HeaderSelector
     */
    protected $headerSelector;

    /**
     * @var int Host index
     */
    protected $hostIndex;

    /** @var string[] $contentTypes **/
    public const contentTypes = [
        'checkCompatibility' => [
            'application/json',
        ],
        'getItem' => [
            'application/json',
        ],
        'getItemByLegacyId' => [
            'application/json',
        ],
        'getItems' => [
            'application/json',
        ],
        'getItemsByItemGroup' => [
            'application/json',
        ],
    ];

    /**
     * @param ClientInterface $client
     * @param Configuration   $config
     * @param HeaderSelector  $selector
     * @param int             $hostIndex (Optional) host index to select the list of hosts if defined in the OpenAPI spec
     */
    public function __construct(
        ClientInterface $client = null,
        Configuration $config = null,
        HeaderSelector $selector = null,
        $hostIndex = 0
    ) {
        $this->client = $client ?: new Client();
        $this->config = $config ?: new Configuration();
        $this->headerSelector = $selector ?: new HeaderSelector();
        $this->hostIndex = $hostIndex;
    }

    /**
     * Set the host index
     *
     * @param int $hostIndex Host index (required)
     */
    public function setHostIndex($hostIndex): void
    {
        $this->hostIndex = $hostIndex;
    }

    /**
     * Get the host index
     *
     * @return int Host index
     */
    public function getHostIndex()
    {
        return $this->hostIndex;
    }

    /**
     * @return Configuration
     */
    public function getConfig()
    {
        return $this->config;
    }

    /**
     * Operation checkCompatibility
     *
     * @param  string $item_id This path parameter specifies the unique RESTful identifier of an item (such as the park you want to check).&lt;br&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (required)
     * @param  string $content_type This header indicates the format of the request body provided by the client.&lt;br&gt;&lt;br&gt;Its value should be set to &lt;code&gt;application/json&lt;/code&gt;.&lt;br&gt;&lt;br&gt;For more information, refer to &lt;a href&#x3D;\&quot;/api-docs/static/rest-request-components.html#HTTP\&quot; target&#x3D;\&quot;_blank \&quot;&gt;HTTP request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/static/ebay-rest-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Using eBay RESTful APIs&lt;/a&gt; guide. (required)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for supported values. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  \Modstore\EbayBrowseApi\Model\CompatibilityPayload $compatibility_payload compatibility_payload (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['checkCompatibility'] to see the possible values for this operation
     *
     * @throws \Modstore\EbayBrowseApi\ApiException on non-2xx response or if the response body is not in the expected format
     * @throws \InvalidArgumentException
     * @return \Modstore\EbayBrowseApi\Model\CompatibilityResponse
     */
    public function checkCompatibility($item_id, $content_type, $x_ebay_c_marketplace_id = null, $accept_language = null, $compatibility_payload = null, string $contentType = self::contentTypes['checkCompatibility'][0])
    {
        list($response) = $this->checkCompatibilityWithHttpInfo($item_id, $content_type, $x_ebay_c_marketplace_id, $accept_language, $compatibility_payload, $contentType);
        return $response;
    }

    /**
     * Operation checkCompatibilityWithHttpInfo
     *
     * @param  string $item_id This path parameter specifies the unique RESTful identifier of an item (such as the park you want to check).&lt;br&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (required)
     * @param  string $content_type This header indicates the format of the request body provided by the client.&lt;br&gt;&lt;br&gt;Its value should be set to &lt;code&gt;application/json&lt;/code&gt;.&lt;br&gt;&lt;br&gt;For more information, refer to &lt;a href&#x3D;\&quot;/api-docs/static/rest-request-components.html#HTTP\&quot; target&#x3D;\&quot;_blank \&quot;&gt;HTTP request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/static/ebay-rest-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Using eBay RESTful APIs&lt;/a&gt; guide. (required)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for supported values. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  \Modstore\EbayBrowseApi\Model\CompatibilityPayload $compatibility_payload (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['checkCompatibility'] to see the possible values for this operation
     *
     * @throws \Modstore\EbayBrowseApi\ApiException on non-2xx response or if the response body is not in the expected format
     * @throws \InvalidArgumentException
     * @return array of \Modstore\EbayBrowseApi\Model\CompatibilityResponse, HTTP status code, HTTP response headers (array of strings)
     */
    public function checkCompatibilityWithHttpInfo($item_id, $content_type, $x_ebay_c_marketplace_id = null, $accept_language = null, $compatibility_payload = null, string $contentType = self::contentTypes['checkCompatibility'][0])
    {
        $request = $this->checkCompatibilityRequest($item_id, $content_type, $x_ebay_c_marketplace_id, $accept_language, $compatibility_payload, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\Modstore\EbayBrowseApi\Model\CompatibilityResponse' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\Modstore\EbayBrowseApi\Model\CompatibilityResponse' !== 'string') {
                            try {
                                $content = json_decode($content, false, 512, JSON_THROW_ON_ERROR);
                            } catch (\JsonException $exception) {
                                throw new ApiException(
                                    sprintf(
                                        'Error JSON decoding server response (%s)',
                                        $request->getUri()
                                    ),
                                    $statusCode,
                                    $response->getHeaders(),
                                    $content
                                );
                            }
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Modstore\EbayBrowseApi\Model\CompatibilityResponse', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Modstore\EbayBrowseApi\Model\CompatibilityResponse';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    try {
                        $content = json_decode($content, false, 512, JSON_THROW_ON_ERROR);
                    } catch (\JsonException $exception) {
                        throw new ApiException(
                            sprintf(
                                'Error JSON decoding server response (%s)',
                                $request->getUri()
                            ),
                            $statusCode,
                            $response->getHeaders(),
                            $content
                        );
                    }
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Modstore\EbayBrowseApi\Model\CompatibilityResponse',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation checkCompatibilityAsync
     *
     * @param  string $item_id This path parameter specifies the unique RESTful identifier of an item (such as the park you want to check).&lt;br&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (required)
     * @param  string $content_type This header indicates the format of the request body provided by the client.&lt;br&gt;&lt;br&gt;Its value should be set to &lt;code&gt;application/json&lt;/code&gt;.&lt;br&gt;&lt;br&gt;For more information, refer to &lt;a href&#x3D;\&quot;/api-docs/static/rest-request-components.html#HTTP\&quot; target&#x3D;\&quot;_blank \&quot;&gt;HTTP request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/static/ebay-rest-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Using eBay RESTful APIs&lt;/a&gt; guide. (required)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for supported values. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  \Modstore\EbayBrowseApi\Model\CompatibilityPayload $compatibility_payload (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['checkCompatibility'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function checkCompatibilityAsync($item_id, $content_type, $x_ebay_c_marketplace_id = null, $accept_language = null, $compatibility_payload = null, string $contentType = self::contentTypes['checkCompatibility'][0])
    {
        return $this->checkCompatibilityAsyncWithHttpInfo($item_id, $content_type, $x_ebay_c_marketplace_id, $accept_language, $compatibility_payload, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation checkCompatibilityAsyncWithHttpInfo
     *
     * @param  string $item_id This path parameter specifies the unique RESTful identifier of an item (such as the park you want to check).&lt;br&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (required)
     * @param  string $content_type This header indicates the format of the request body provided by the client.&lt;br&gt;&lt;br&gt;Its value should be set to &lt;code&gt;application/json&lt;/code&gt;.&lt;br&gt;&lt;br&gt;For more information, refer to &lt;a href&#x3D;\&quot;/api-docs/static/rest-request-components.html#HTTP\&quot; target&#x3D;\&quot;_blank \&quot;&gt;HTTP request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/static/ebay-rest-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Using eBay RESTful APIs&lt;/a&gt; guide. (required)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for supported values. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  \Modstore\EbayBrowseApi\Model\CompatibilityPayload $compatibility_payload (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['checkCompatibility'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function checkCompatibilityAsyncWithHttpInfo($item_id, $content_type, $x_ebay_c_marketplace_id = null, $accept_language = null, $compatibility_payload = null, string $contentType = self::contentTypes['checkCompatibility'][0])
    {
        $returnType = '\Modstore\EbayBrowseApi\Model\CompatibilityResponse';
        $request = $this->checkCompatibilityRequest($item_id, $content_type, $x_ebay_c_marketplace_id, $accept_language, $compatibility_payload, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'checkCompatibility'
     *
     * @param  string $item_id This path parameter specifies the unique RESTful identifier of an item (such as the park you want to check).&lt;br&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (required)
     * @param  string $content_type This header indicates the format of the request body provided by the client.&lt;br&gt;&lt;br&gt;Its value should be set to &lt;code&gt;application/json&lt;/code&gt;.&lt;br&gt;&lt;br&gt;For more information, refer to &lt;a href&#x3D;\&quot;/api-docs/static/rest-request-components.html#HTTP\&quot; target&#x3D;\&quot;_blank \&quot;&gt;HTTP request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/static/ebay-rest-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Using eBay RESTful APIs&lt;/a&gt; guide. (required)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for supported values. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  \Modstore\EbayBrowseApi\Model\CompatibilityPayload $compatibility_payload (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['checkCompatibility'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function checkCompatibilityRequest($item_id, $content_type, $x_ebay_c_marketplace_id = null, $accept_language = null, $compatibility_payload = null, string $contentType = self::contentTypes['checkCompatibility'][0])
    {

        // verify the required parameter 'item_id' is set
        if ($item_id === null || (is_array($item_id) && count($item_id) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $item_id when calling checkCompatibility'
            );
        }

        // verify the required parameter 'content_type' is set
        if ($content_type === null || (is_array($content_type) && count($content_type) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $content_type when calling checkCompatibility'
            );
        }





        $resourcePath = '/item/{item_id}/check_compatibility';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;


        // header params
        if ($x_ebay_c_marketplace_id !== null) {
            $headerParams['X-EBAY-C-MARKETPLACE-ID'] = ObjectSerializer::toHeaderValue($x_ebay_c_marketplace_id);
        }
        // header params
        if ($content_type !== null) {
            $headerParams['Content-Type'] = ObjectSerializer::toHeaderValue($content_type);
        }
        // header params
        if ($accept_language !== null) {
            $headerParams['Accept-Language'] = ObjectSerializer::toHeaderValue($accept_language);
        }

        // path params
        if ($item_id !== null) {
            $resourcePath = str_replace(
                '{' . 'item_id' . '}',
                ObjectSerializer::toPathValue($item_id),
                $resourcePath
            );
        }


        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (isset($compatibility_payload)) {
            if (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the body
                $httpBody = \GuzzleHttp\Utils::jsonEncode(ObjectSerializer::sanitizeForSerialization($compatibility_payload));
            } else {
                $httpBody = $compatibility_payload;
            }
        } elseif (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = \GuzzleHttp\Utils::jsonEncode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires OAuth (access token)
        if (!empty($this->config->getAccessToken())) {
            $headers['Authorization'] = 'Bearer ' . $this->config->getAccessToken();
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'POST',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation getItem
     *
     * @param  string $item_id This path parameter specifies the unique RESTful identifier of the item being retrieved. &lt;br&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (required)
     * @param  string $fieldgroups This parameter controls what is returned in the response. If this field is not set, the method returns all the details of the item.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; Multiple &lt;b&gt;fieldgroups&lt;/b&gt; can be set and applied simultaneously. However, &lt;b&gt;COMPACT&lt;/b&gt; &lt;b&gt;must&lt;/b&gt; be used alone. Otherwise, an error will occur.&lt;/span&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;PRODUCT&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem#response.product\&quot;&gt;product&lt;/a&gt; container to the response.&lt;/li&gt;&lt;li&gt;&lt;b&gt;COMPACT&lt;/b&gt;&lt;/br&gt;This field group returns only the following fields which let you quickly check if the availability or price of the item has changed, if the item has been revised by the seller, or if an item&#39;s top-rated plus status has changed for items you have stored.&lt;ul&gt;&lt;li&gt;&lt;b&gt;itemId&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;bidCount&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;currentBidPrice&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;eligibleForInlineCheckout&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;estimatedAvailabilities&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;gtin&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;itemAffiliateWebURL&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;itemCreationDate&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;ItemWebURL&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;legacyItemId&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;minimumPriceToBid&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;price&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;priorityListing&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;reservePriceMet&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;sellerItemRevision&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;shippingOptions&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;taxes&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;topRatedBuyingExperience&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;uniqueBidderCount&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;For Example:&lt;br&gt;To determine if a stored item&#39;s information is current, perform the following:&lt;ol&gt;&lt;li&gt;Pass in the item ID and set &lt;code&gt;fieldgroups&lt;/code&gt; to &lt;code&gt;COMPACT&lt;/code&gt;.&lt;pre&gt;item/v1|4**********8|0?fieldgroups&#x3D;COMPACT&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Do one of the following:&lt;ul&gt;&lt;li&gt;If &lt;b&gt;sellerItemRevision&lt;/b&gt; is returned and a revision number for this item &lt;i&gt;has not&lt;/i&gt; been stored, record the number and pass in the item ID in the &lt;b&gt;getItem&lt;/b&gt; method to retrieve the most recent information.&lt;/li&gt;&lt;li&gt;If the revision number is different from the value you have stored, update the value and pass in the item ID in the &lt;b&gt;getItem&lt;/b&gt; method to retrieve the most recent information.&lt;/li&gt;&lt;li&gt;If &lt;code&gt;sellerItemRevision&lt;/code&gt; is &lt;i&gt;not&lt;/i&gt; returned or has not changed, where needed, update the item information with the information returned in the response.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt;&lt;br&gt;This adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem#response.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItem'] to see the possible values for this operation
     *
     * @throws \Modstore\EbayBrowseApi\ApiException on non-2xx response or if the response body is not in the expected format
     * @throws \InvalidArgumentException
     * @return \Modstore\EbayBrowseApi\Model\Item
     */
    public function getItem($item_id, $fieldgroups = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItem'][0])
    {
        list($response) = $this->getItemWithHttpInfo($item_id, $fieldgroups, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType);
        return $response;
    }

    /**
     * Operation getItemWithHttpInfo
     *
     * @param  string $item_id This path parameter specifies the unique RESTful identifier of the item being retrieved. &lt;br&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (required)
     * @param  string $fieldgroups This parameter controls what is returned in the response. If this field is not set, the method returns all the details of the item.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; Multiple &lt;b&gt;fieldgroups&lt;/b&gt; can be set and applied simultaneously. However, &lt;b&gt;COMPACT&lt;/b&gt; &lt;b&gt;must&lt;/b&gt; be used alone. Otherwise, an error will occur.&lt;/span&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;PRODUCT&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem#response.product\&quot;&gt;product&lt;/a&gt; container to the response.&lt;/li&gt;&lt;li&gt;&lt;b&gt;COMPACT&lt;/b&gt;&lt;/br&gt;This field group returns only the following fields which let you quickly check if the availability or price of the item has changed, if the item has been revised by the seller, or if an item&#39;s top-rated plus status has changed for items you have stored.&lt;ul&gt;&lt;li&gt;&lt;b&gt;itemId&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;bidCount&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;currentBidPrice&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;eligibleForInlineCheckout&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;estimatedAvailabilities&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;gtin&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;itemAffiliateWebURL&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;itemCreationDate&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;ItemWebURL&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;legacyItemId&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;minimumPriceToBid&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;price&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;priorityListing&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;reservePriceMet&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;sellerItemRevision&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;shippingOptions&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;taxes&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;topRatedBuyingExperience&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;uniqueBidderCount&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;For Example:&lt;br&gt;To determine if a stored item&#39;s information is current, perform the following:&lt;ol&gt;&lt;li&gt;Pass in the item ID and set &lt;code&gt;fieldgroups&lt;/code&gt; to &lt;code&gt;COMPACT&lt;/code&gt;.&lt;pre&gt;item/v1|4**********8|0?fieldgroups&#x3D;COMPACT&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Do one of the following:&lt;ul&gt;&lt;li&gt;If &lt;b&gt;sellerItemRevision&lt;/b&gt; is returned and a revision number for this item &lt;i&gt;has not&lt;/i&gt; been stored, record the number and pass in the item ID in the &lt;b&gt;getItem&lt;/b&gt; method to retrieve the most recent information.&lt;/li&gt;&lt;li&gt;If the revision number is different from the value you have stored, update the value and pass in the item ID in the &lt;b&gt;getItem&lt;/b&gt; method to retrieve the most recent information.&lt;/li&gt;&lt;li&gt;If &lt;code&gt;sellerItemRevision&lt;/code&gt; is &lt;i&gt;not&lt;/i&gt; returned or has not changed, where needed, update the item information with the information returned in the response.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt;&lt;br&gt;This adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem#response.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItem'] to see the possible values for this operation
     *
     * @throws \Modstore\EbayBrowseApi\ApiException on non-2xx response or if the response body is not in the expected format
     * @throws \InvalidArgumentException
     * @return array of \Modstore\EbayBrowseApi\Model\Item, HTTP status code, HTTP response headers (array of strings)
     */
    public function getItemWithHttpInfo($item_id, $fieldgroups = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItem'][0])
    {
        $request = $this->getItemRequest($item_id, $fieldgroups, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\Modstore\EbayBrowseApi\Model\Item' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\Modstore\EbayBrowseApi\Model\Item' !== 'string') {
                            try {
                                $content = json_decode($content, false, 512, JSON_THROW_ON_ERROR);
                            } catch (\JsonException $exception) {
                                throw new ApiException(
                                    sprintf(
                                        'Error JSON decoding server response (%s)',
                                        $request->getUri()
                                    ),
                                    $statusCode,
                                    $response->getHeaders(),
                                    $content
                                );
                            }
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Modstore\EbayBrowseApi\Model\Item', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Modstore\EbayBrowseApi\Model\Item';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    try {
                        $content = json_decode($content, false, 512, JSON_THROW_ON_ERROR);
                    } catch (\JsonException $exception) {
                        throw new ApiException(
                            sprintf(
                                'Error JSON decoding server response (%s)',
                                $request->getUri()
                            ),
                            $statusCode,
                            $response->getHeaders(),
                            $content
                        );
                    }
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Modstore\EbayBrowseApi\Model\Item',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation getItemAsync
     *
     * @param  string $item_id This path parameter specifies the unique RESTful identifier of the item being retrieved. &lt;br&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (required)
     * @param  string $fieldgroups This parameter controls what is returned in the response. If this field is not set, the method returns all the details of the item.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; Multiple &lt;b&gt;fieldgroups&lt;/b&gt; can be set and applied simultaneously. However, &lt;b&gt;COMPACT&lt;/b&gt; &lt;b&gt;must&lt;/b&gt; be used alone. Otherwise, an error will occur.&lt;/span&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;PRODUCT&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem#response.product\&quot;&gt;product&lt;/a&gt; container to the response.&lt;/li&gt;&lt;li&gt;&lt;b&gt;COMPACT&lt;/b&gt;&lt;/br&gt;This field group returns only the following fields which let you quickly check if the availability or price of the item has changed, if the item has been revised by the seller, or if an item&#39;s top-rated plus status has changed for items you have stored.&lt;ul&gt;&lt;li&gt;&lt;b&gt;itemId&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;bidCount&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;currentBidPrice&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;eligibleForInlineCheckout&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;estimatedAvailabilities&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;gtin&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;itemAffiliateWebURL&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;itemCreationDate&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;ItemWebURL&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;legacyItemId&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;minimumPriceToBid&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;price&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;priorityListing&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;reservePriceMet&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;sellerItemRevision&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;shippingOptions&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;taxes&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;topRatedBuyingExperience&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;uniqueBidderCount&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;For Example:&lt;br&gt;To determine if a stored item&#39;s information is current, perform the following:&lt;ol&gt;&lt;li&gt;Pass in the item ID and set &lt;code&gt;fieldgroups&lt;/code&gt; to &lt;code&gt;COMPACT&lt;/code&gt;.&lt;pre&gt;item/v1|4**********8|0?fieldgroups&#x3D;COMPACT&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Do one of the following:&lt;ul&gt;&lt;li&gt;If &lt;b&gt;sellerItemRevision&lt;/b&gt; is returned and a revision number for this item &lt;i&gt;has not&lt;/i&gt; been stored, record the number and pass in the item ID in the &lt;b&gt;getItem&lt;/b&gt; method to retrieve the most recent information.&lt;/li&gt;&lt;li&gt;If the revision number is different from the value you have stored, update the value and pass in the item ID in the &lt;b&gt;getItem&lt;/b&gt; method to retrieve the most recent information.&lt;/li&gt;&lt;li&gt;If &lt;code&gt;sellerItemRevision&lt;/code&gt; is &lt;i&gt;not&lt;/i&gt; returned or has not changed, where needed, update the item information with the information returned in the response.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt;&lt;br&gt;This adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem#response.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItem'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getItemAsync($item_id, $fieldgroups = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItem'][0])
    {
        return $this->getItemAsyncWithHttpInfo($item_id, $fieldgroups, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation getItemAsyncWithHttpInfo
     *
     * @param  string $item_id This path parameter specifies the unique RESTful identifier of the item being retrieved. &lt;br&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (required)
     * @param  string $fieldgroups This parameter controls what is returned in the response. If this field is not set, the method returns all the details of the item.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; Multiple &lt;b&gt;fieldgroups&lt;/b&gt; can be set and applied simultaneously. However, &lt;b&gt;COMPACT&lt;/b&gt; &lt;b&gt;must&lt;/b&gt; be used alone. Otherwise, an error will occur.&lt;/span&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;PRODUCT&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem#response.product\&quot;&gt;product&lt;/a&gt; container to the response.&lt;/li&gt;&lt;li&gt;&lt;b&gt;COMPACT&lt;/b&gt;&lt;/br&gt;This field group returns only the following fields which let you quickly check if the availability or price of the item has changed, if the item has been revised by the seller, or if an item&#39;s top-rated plus status has changed for items you have stored.&lt;ul&gt;&lt;li&gt;&lt;b&gt;itemId&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;bidCount&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;currentBidPrice&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;eligibleForInlineCheckout&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;estimatedAvailabilities&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;gtin&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;itemAffiliateWebURL&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;itemCreationDate&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;ItemWebURL&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;legacyItemId&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;minimumPriceToBid&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;price&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;priorityListing&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;reservePriceMet&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;sellerItemRevision&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;shippingOptions&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;taxes&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;topRatedBuyingExperience&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;uniqueBidderCount&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;For Example:&lt;br&gt;To determine if a stored item&#39;s information is current, perform the following:&lt;ol&gt;&lt;li&gt;Pass in the item ID and set &lt;code&gt;fieldgroups&lt;/code&gt; to &lt;code&gt;COMPACT&lt;/code&gt;.&lt;pre&gt;item/v1|4**********8|0?fieldgroups&#x3D;COMPACT&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Do one of the following:&lt;ul&gt;&lt;li&gt;If &lt;b&gt;sellerItemRevision&lt;/b&gt; is returned and a revision number for this item &lt;i&gt;has not&lt;/i&gt; been stored, record the number and pass in the item ID in the &lt;b&gt;getItem&lt;/b&gt; method to retrieve the most recent information.&lt;/li&gt;&lt;li&gt;If the revision number is different from the value you have stored, update the value and pass in the item ID in the &lt;b&gt;getItem&lt;/b&gt; method to retrieve the most recent information.&lt;/li&gt;&lt;li&gt;If &lt;code&gt;sellerItemRevision&lt;/code&gt; is &lt;i&gt;not&lt;/i&gt; returned or has not changed, where needed, update the item information with the information returned in the response.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt;&lt;br&gt;This adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem#response.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItem'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getItemAsyncWithHttpInfo($item_id, $fieldgroups = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItem'][0])
    {
        $returnType = '\Modstore\EbayBrowseApi\Model\Item';
        $request = $this->getItemRequest($item_id, $fieldgroups, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'getItem'
     *
     * @param  string $item_id This path parameter specifies the unique RESTful identifier of the item being retrieved. &lt;br&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (required)
     * @param  string $fieldgroups This parameter controls what is returned in the response. If this field is not set, the method returns all the details of the item.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; Multiple &lt;b&gt;fieldgroups&lt;/b&gt; can be set and applied simultaneously. However, &lt;b&gt;COMPACT&lt;/b&gt; &lt;b&gt;must&lt;/b&gt; be used alone. Otherwise, an error will occur.&lt;/span&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;PRODUCT&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem#response.product\&quot;&gt;product&lt;/a&gt; container to the response.&lt;/li&gt;&lt;li&gt;&lt;b&gt;COMPACT&lt;/b&gt;&lt;/br&gt;This field group returns only the following fields which let you quickly check if the availability or price of the item has changed, if the item has been revised by the seller, or if an item&#39;s top-rated plus status has changed for items you have stored.&lt;ul&gt;&lt;li&gt;&lt;b&gt;itemId&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;bidCount&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;currentBidPrice&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;eligibleForInlineCheckout&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;estimatedAvailabilities&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;gtin&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;itemAffiliateWebURL&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;itemCreationDate&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;ItemWebURL&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;legacyItemId&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;minimumPriceToBid&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;price&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;priorityListing&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;reservePriceMet&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;sellerItemRevision&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;shippingOptions&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;taxes&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;topRatedBuyingExperience&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;uniqueBidderCount&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;For Example:&lt;br&gt;To determine if a stored item&#39;s information is current, perform the following:&lt;ol&gt;&lt;li&gt;Pass in the item ID and set &lt;code&gt;fieldgroups&lt;/code&gt; to &lt;code&gt;COMPACT&lt;/code&gt;.&lt;pre&gt;item/v1|4**********8|0?fieldgroups&#x3D;COMPACT&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Do one of the following:&lt;ul&gt;&lt;li&gt;If &lt;b&gt;sellerItemRevision&lt;/b&gt; is returned and a revision number for this item &lt;i&gt;has not&lt;/i&gt; been stored, record the number and pass in the item ID in the &lt;b&gt;getItem&lt;/b&gt; method to retrieve the most recent information.&lt;/li&gt;&lt;li&gt;If the revision number is different from the value you have stored, update the value and pass in the item ID in the &lt;b&gt;getItem&lt;/b&gt; method to retrieve the most recent information.&lt;/li&gt;&lt;li&gt;If &lt;code&gt;sellerItemRevision&lt;/code&gt; is &lt;i&gt;not&lt;/i&gt; returned or has not changed, where needed, update the item information with the information returned in the response.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt;&lt;br&gt;This adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem#response.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItem'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getItemRequest($item_id, $fieldgroups = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItem'][0])
    {

        // verify the required parameter 'item_id' is set
        if ($item_id === null || (is_array($item_id) && count($item_id) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $item_id when calling getItem'
            );
        }






        $resourcePath = '/item/{item_id}';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $fieldgroups,
            'fieldgroups', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);

        // header params
        if ($x_ebay_c_enduserctx !== null) {
            $headerParams['X-EBAY-C-ENDUSERCTX'] = ObjectSerializer::toHeaderValue($x_ebay_c_enduserctx);
        }
        // header params
        if ($x_ebay_c_marketplace_id !== null) {
            $headerParams['X-EBAY-C-MARKETPLACE-ID'] = ObjectSerializer::toHeaderValue($x_ebay_c_marketplace_id);
        }
        // header params
        if ($accept_language !== null) {
            $headerParams['Accept-Language'] = ObjectSerializer::toHeaderValue($accept_language);
        }

        // path params
        if ($item_id !== null) {
            $resourcePath = str_replace(
                '{' . 'item_id' . '}',
                ObjectSerializer::toPathValue($item_id),
                $resourcePath
            );
        }


        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = \GuzzleHttp\Utils::jsonEncode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires OAuth (access token)
        if (!empty($this->config->getAccessToken())) {
            $headers['Authorization'] = 'Bearer ' . $this->config->getAccessToken();
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation getItemByLegacyId
     *
     * @param  string $legacy_item_id This query parameter is the unique identifier that specifies the item being retrieved.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt; Note:&lt;/b&gt; When passing in the ID for a multi-variation listing, you must also use the &lt;code&gt;legacy_variation_id&lt;/code&gt; field and pass in the ID of the specific item variation. If not, all variation within the multi-SKU listing will be retrieved.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;The following is an example of using the value of the &lt;b&gt;ItemID&lt;/b&gt; field for a specific item to get the RESTful &lt;code&gt;itemId&lt;/code&gt; value.&lt;pre&gt;&lt;code&gt;browse/v1/item/get_item_by_legacy_id?legacy_item_id&#x3D;1**********9&lt;/code&gt;&lt;/pre&gt; (required)
     * @param  string $fieldgroups This field controls what is returned in the response. If this field is not set, the method returns all details about the item. Multiple &lt;code&gt;fieldgroups&lt;/code&gt; can be set.&lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt; &lt;b&gt;PRODUCT&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemByLegacyId#response.product\&quot;&gt;product&lt;/a&gt; container to the response. &lt;/li&gt;&lt;li&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemByLegacyId#response.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $legacy_variation_id This query parameter specifies the legacy item ID of a specific item in a multi-variation listing, such as that for the &lt;i&gt;red shirt size L&lt;/i&gt; item.&lt;br&gt;&lt;br&gt;&lt;div class&#x3D;\&quot;msgbox_important\&quot;&gt;&lt;p class&#x3D;\&quot;msgbox_importantInDiv\&quot; data-mc-autonum&#x3D;\&quot;&amp;lt;b&amp;gt;&amp;lt;span style&#x3D;&amp;quot;color: #dd1e31;&amp;quot; class&#x3D;&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;\&quot;&gt;&lt;span class&#x3D;\&quot;autonumber\&quot;&gt;&lt;span&gt;&lt;b&gt;&lt;span style&#x3D;\&quot;color: #dd1e31;\&quot; class&#x3D;\&quot;mcFormatColor\&quot;&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt; A &lt;code&gt;legacy_item_id&lt;/code&gt; value must always be passed in when specifying a &lt;code&gt;legacy_variation_id&lt;/code&gt; value.&lt;/p&gt;&lt;/div&gt; (optional)
     * @param  string $legacy_variation_sku This query parameter specifies the legacy SKU of an item. SKUs are the unique identifiers of an item created by the seller.&lt;br&gt;&lt;br&gt;The following is an example of using the value of the &lt;code&gt;ItemID&lt;/code&gt; and &lt;code&gt;SKU&lt;/code&gt; fields to get the RESTful &lt;code&gt;itemId&lt;/code&gt; value.&lt;pre&gt;&lt;code&gt;browse/v1/item/get_item_by_legacy_id?legacy_item_id&#x3D;1**********9&amp;amp;legacy_variation_sku&#x3D;V**********M&lt;/code&gt;&lt;/pre&gt;&lt;div class&#x3D;\&quot;msgbox_important\&quot;&gt;&lt;p class&#x3D;\&quot;msgbox_importantInDiv\&quot; data-mc-autonum&#x3D;\&quot;&amp;lt;b&amp;gt;&amp;lt;span style&#x3D;&amp;quot;color: #dd1e31;&amp;quot; class&#x3D;&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;\&quot;&gt;&lt;span class&#x3D;\&quot;autonumber\&quot;&gt;&lt;span&gt;&lt;b&gt;&lt;span style&#x3D;\&quot;color: #dd1e31;\&quot; class&#x3D;\&quot;mcFormatColor\&quot;&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt; A &lt;code&gt;legacy_item_id&lt;/code&gt; value must always be passed in when specifying a &lt;code&gt;legacy_variation_sku&lt;/code&gt; value.&lt;/p&gt;&lt;/div&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItemByLegacyId'] to see the possible values for this operation
     *
     * @throws \Modstore\EbayBrowseApi\ApiException on non-2xx response or if the response body is not in the expected format
     * @throws \InvalidArgumentException
     * @return \Modstore\EbayBrowseApi\Model\Item
     */
    public function getItemByLegacyId($legacy_item_id, $fieldgroups = null, $legacy_variation_id = null, $legacy_variation_sku = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItemByLegacyId'][0])
    {
        list($response) = $this->getItemByLegacyIdWithHttpInfo($legacy_item_id, $fieldgroups, $legacy_variation_id, $legacy_variation_sku, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType);
        return $response;
    }

    /**
     * Operation getItemByLegacyIdWithHttpInfo
     *
     * @param  string $legacy_item_id This query parameter is the unique identifier that specifies the item being retrieved.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt; Note:&lt;/b&gt; When passing in the ID for a multi-variation listing, you must also use the &lt;code&gt;legacy_variation_id&lt;/code&gt; field and pass in the ID of the specific item variation. If not, all variation within the multi-SKU listing will be retrieved.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;The following is an example of using the value of the &lt;b&gt;ItemID&lt;/b&gt; field for a specific item to get the RESTful &lt;code&gt;itemId&lt;/code&gt; value.&lt;pre&gt;&lt;code&gt;browse/v1/item/get_item_by_legacy_id?legacy_item_id&#x3D;1**********9&lt;/code&gt;&lt;/pre&gt; (required)
     * @param  string $fieldgroups This field controls what is returned in the response. If this field is not set, the method returns all details about the item. Multiple &lt;code&gt;fieldgroups&lt;/code&gt; can be set.&lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt; &lt;b&gt;PRODUCT&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemByLegacyId#response.product\&quot;&gt;product&lt;/a&gt; container to the response. &lt;/li&gt;&lt;li&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemByLegacyId#response.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $legacy_variation_id This query parameter specifies the legacy item ID of a specific item in a multi-variation listing, such as that for the &lt;i&gt;red shirt size L&lt;/i&gt; item.&lt;br&gt;&lt;br&gt;&lt;div class&#x3D;\&quot;msgbox_important\&quot;&gt;&lt;p class&#x3D;\&quot;msgbox_importantInDiv\&quot; data-mc-autonum&#x3D;\&quot;&amp;lt;b&amp;gt;&amp;lt;span style&#x3D;&amp;quot;color: #dd1e31;&amp;quot; class&#x3D;&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;\&quot;&gt;&lt;span class&#x3D;\&quot;autonumber\&quot;&gt;&lt;span&gt;&lt;b&gt;&lt;span style&#x3D;\&quot;color: #dd1e31;\&quot; class&#x3D;\&quot;mcFormatColor\&quot;&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt; A &lt;code&gt;legacy_item_id&lt;/code&gt; value must always be passed in when specifying a &lt;code&gt;legacy_variation_id&lt;/code&gt; value.&lt;/p&gt;&lt;/div&gt; (optional)
     * @param  string $legacy_variation_sku This query parameter specifies the legacy SKU of an item. SKUs are the unique identifiers of an item created by the seller.&lt;br&gt;&lt;br&gt;The following is an example of using the value of the &lt;code&gt;ItemID&lt;/code&gt; and &lt;code&gt;SKU&lt;/code&gt; fields to get the RESTful &lt;code&gt;itemId&lt;/code&gt; value.&lt;pre&gt;&lt;code&gt;browse/v1/item/get_item_by_legacy_id?legacy_item_id&#x3D;1**********9&amp;amp;legacy_variation_sku&#x3D;V**********M&lt;/code&gt;&lt;/pre&gt;&lt;div class&#x3D;\&quot;msgbox_important\&quot;&gt;&lt;p class&#x3D;\&quot;msgbox_importantInDiv\&quot; data-mc-autonum&#x3D;\&quot;&amp;lt;b&amp;gt;&amp;lt;span style&#x3D;&amp;quot;color: #dd1e31;&amp;quot; class&#x3D;&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;\&quot;&gt;&lt;span class&#x3D;\&quot;autonumber\&quot;&gt;&lt;span&gt;&lt;b&gt;&lt;span style&#x3D;\&quot;color: #dd1e31;\&quot; class&#x3D;\&quot;mcFormatColor\&quot;&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt; A &lt;code&gt;legacy_item_id&lt;/code&gt; value must always be passed in when specifying a &lt;code&gt;legacy_variation_sku&lt;/code&gt; value.&lt;/p&gt;&lt;/div&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItemByLegacyId'] to see the possible values for this operation
     *
     * @throws \Modstore\EbayBrowseApi\ApiException on non-2xx response or if the response body is not in the expected format
     * @throws \InvalidArgumentException
     * @return array of \Modstore\EbayBrowseApi\Model\Item, HTTP status code, HTTP response headers (array of strings)
     */
    public function getItemByLegacyIdWithHttpInfo($legacy_item_id, $fieldgroups = null, $legacy_variation_id = null, $legacy_variation_sku = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItemByLegacyId'][0])
    {
        $request = $this->getItemByLegacyIdRequest($legacy_item_id, $fieldgroups, $legacy_variation_id, $legacy_variation_sku, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\Modstore\EbayBrowseApi\Model\Item' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\Modstore\EbayBrowseApi\Model\Item' !== 'string') {
                            try {
                                $content = json_decode($content, false, 512, JSON_THROW_ON_ERROR);
                            } catch (\JsonException $exception) {
                                throw new ApiException(
                                    sprintf(
                                        'Error JSON decoding server response (%s)',
                                        $request->getUri()
                                    ),
                                    $statusCode,
                                    $response->getHeaders(),
                                    $content
                                );
                            }
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Modstore\EbayBrowseApi\Model\Item', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Modstore\EbayBrowseApi\Model\Item';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    try {
                        $content = json_decode($content, false, 512, JSON_THROW_ON_ERROR);
                    } catch (\JsonException $exception) {
                        throw new ApiException(
                            sprintf(
                                'Error JSON decoding server response (%s)',
                                $request->getUri()
                            ),
                            $statusCode,
                            $response->getHeaders(),
                            $content
                        );
                    }
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Modstore\EbayBrowseApi\Model\Item',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation getItemByLegacyIdAsync
     *
     * @param  string $legacy_item_id This query parameter is the unique identifier that specifies the item being retrieved.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt; Note:&lt;/b&gt; When passing in the ID for a multi-variation listing, you must also use the &lt;code&gt;legacy_variation_id&lt;/code&gt; field and pass in the ID of the specific item variation. If not, all variation within the multi-SKU listing will be retrieved.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;The following is an example of using the value of the &lt;b&gt;ItemID&lt;/b&gt; field for a specific item to get the RESTful &lt;code&gt;itemId&lt;/code&gt; value.&lt;pre&gt;&lt;code&gt;browse/v1/item/get_item_by_legacy_id?legacy_item_id&#x3D;1**********9&lt;/code&gt;&lt;/pre&gt; (required)
     * @param  string $fieldgroups This field controls what is returned in the response. If this field is not set, the method returns all details about the item. Multiple &lt;code&gt;fieldgroups&lt;/code&gt; can be set.&lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt; &lt;b&gt;PRODUCT&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemByLegacyId#response.product\&quot;&gt;product&lt;/a&gt; container to the response. &lt;/li&gt;&lt;li&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemByLegacyId#response.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $legacy_variation_id This query parameter specifies the legacy item ID of a specific item in a multi-variation listing, such as that for the &lt;i&gt;red shirt size L&lt;/i&gt; item.&lt;br&gt;&lt;br&gt;&lt;div class&#x3D;\&quot;msgbox_important\&quot;&gt;&lt;p class&#x3D;\&quot;msgbox_importantInDiv\&quot; data-mc-autonum&#x3D;\&quot;&amp;lt;b&amp;gt;&amp;lt;span style&#x3D;&amp;quot;color: #dd1e31;&amp;quot; class&#x3D;&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;\&quot;&gt;&lt;span class&#x3D;\&quot;autonumber\&quot;&gt;&lt;span&gt;&lt;b&gt;&lt;span style&#x3D;\&quot;color: #dd1e31;\&quot; class&#x3D;\&quot;mcFormatColor\&quot;&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt; A &lt;code&gt;legacy_item_id&lt;/code&gt; value must always be passed in when specifying a &lt;code&gt;legacy_variation_id&lt;/code&gt; value.&lt;/p&gt;&lt;/div&gt; (optional)
     * @param  string $legacy_variation_sku This query parameter specifies the legacy SKU of an item. SKUs are the unique identifiers of an item created by the seller.&lt;br&gt;&lt;br&gt;The following is an example of using the value of the &lt;code&gt;ItemID&lt;/code&gt; and &lt;code&gt;SKU&lt;/code&gt; fields to get the RESTful &lt;code&gt;itemId&lt;/code&gt; value.&lt;pre&gt;&lt;code&gt;browse/v1/item/get_item_by_legacy_id?legacy_item_id&#x3D;1**********9&amp;amp;legacy_variation_sku&#x3D;V**********M&lt;/code&gt;&lt;/pre&gt;&lt;div class&#x3D;\&quot;msgbox_important\&quot;&gt;&lt;p class&#x3D;\&quot;msgbox_importantInDiv\&quot; data-mc-autonum&#x3D;\&quot;&amp;lt;b&amp;gt;&amp;lt;span style&#x3D;&amp;quot;color: #dd1e31;&amp;quot; class&#x3D;&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;\&quot;&gt;&lt;span class&#x3D;\&quot;autonumber\&quot;&gt;&lt;span&gt;&lt;b&gt;&lt;span style&#x3D;\&quot;color: #dd1e31;\&quot; class&#x3D;\&quot;mcFormatColor\&quot;&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt; A &lt;code&gt;legacy_item_id&lt;/code&gt; value must always be passed in when specifying a &lt;code&gt;legacy_variation_sku&lt;/code&gt; value.&lt;/p&gt;&lt;/div&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItemByLegacyId'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getItemByLegacyIdAsync($legacy_item_id, $fieldgroups = null, $legacy_variation_id = null, $legacy_variation_sku = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItemByLegacyId'][0])
    {
        return $this->getItemByLegacyIdAsyncWithHttpInfo($legacy_item_id, $fieldgroups, $legacy_variation_id, $legacy_variation_sku, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation getItemByLegacyIdAsyncWithHttpInfo
     *
     * @param  string $legacy_item_id This query parameter is the unique identifier that specifies the item being retrieved.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt; Note:&lt;/b&gt; When passing in the ID for a multi-variation listing, you must also use the &lt;code&gt;legacy_variation_id&lt;/code&gt; field and pass in the ID of the specific item variation. If not, all variation within the multi-SKU listing will be retrieved.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;The following is an example of using the value of the &lt;b&gt;ItemID&lt;/b&gt; field for a specific item to get the RESTful &lt;code&gt;itemId&lt;/code&gt; value.&lt;pre&gt;&lt;code&gt;browse/v1/item/get_item_by_legacy_id?legacy_item_id&#x3D;1**********9&lt;/code&gt;&lt;/pre&gt; (required)
     * @param  string $fieldgroups This field controls what is returned in the response. If this field is not set, the method returns all details about the item. Multiple &lt;code&gt;fieldgroups&lt;/code&gt; can be set.&lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt; &lt;b&gt;PRODUCT&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemByLegacyId#response.product\&quot;&gt;product&lt;/a&gt; container to the response. &lt;/li&gt;&lt;li&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemByLegacyId#response.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $legacy_variation_id This query parameter specifies the legacy item ID of a specific item in a multi-variation listing, such as that for the &lt;i&gt;red shirt size L&lt;/i&gt; item.&lt;br&gt;&lt;br&gt;&lt;div class&#x3D;\&quot;msgbox_important\&quot;&gt;&lt;p class&#x3D;\&quot;msgbox_importantInDiv\&quot; data-mc-autonum&#x3D;\&quot;&amp;lt;b&amp;gt;&amp;lt;span style&#x3D;&amp;quot;color: #dd1e31;&amp;quot; class&#x3D;&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;\&quot;&gt;&lt;span class&#x3D;\&quot;autonumber\&quot;&gt;&lt;span&gt;&lt;b&gt;&lt;span style&#x3D;\&quot;color: #dd1e31;\&quot; class&#x3D;\&quot;mcFormatColor\&quot;&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt; A &lt;code&gt;legacy_item_id&lt;/code&gt; value must always be passed in when specifying a &lt;code&gt;legacy_variation_id&lt;/code&gt; value.&lt;/p&gt;&lt;/div&gt; (optional)
     * @param  string $legacy_variation_sku This query parameter specifies the legacy SKU of an item. SKUs are the unique identifiers of an item created by the seller.&lt;br&gt;&lt;br&gt;The following is an example of using the value of the &lt;code&gt;ItemID&lt;/code&gt; and &lt;code&gt;SKU&lt;/code&gt; fields to get the RESTful &lt;code&gt;itemId&lt;/code&gt; value.&lt;pre&gt;&lt;code&gt;browse/v1/item/get_item_by_legacy_id?legacy_item_id&#x3D;1**********9&amp;amp;legacy_variation_sku&#x3D;V**********M&lt;/code&gt;&lt;/pre&gt;&lt;div class&#x3D;\&quot;msgbox_important\&quot;&gt;&lt;p class&#x3D;\&quot;msgbox_importantInDiv\&quot; data-mc-autonum&#x3D;\&quot;&amp;lt;b&amp;gt;&amp;lt;span style&#x3D;&amp;quot;color: #dd1e31;&amp;quot; class&#x3D;&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;\&quot;&gt;&lt;span class&#x3D;\&quot;autonumber\&quot;&gt;&lt;span&gt;&lt;b&gt;&lt;span style&#x3D;\&quot;color: #dd1e31;\&quot; class&#x3D;\&quot;mcFormatColor\&quot;&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt; A &lt;code&gt;legacy_item_id&lt;/code&gt; value must always be passed in when specifying a &lt;code&gt;legacy_variation_sku&lt;/code&gt; value.&lt;/p&gt;&lt;/div&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItemByLegacyId'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getItemByLegacyIdAsyncWithHttpInfo($legacy_item_id, $fieldgroups = null, $legacy_variation_id = null, $legacy_variation_sku = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItemByLegacyId'][0])
    {
        $returnType = '\Modstore\EbayBrowseApi\Model\Item';
        $request = $this->getItemByLegacyIdRequest($legacy_item_id, $fieldgroups, $legacy_variation_id, $legacy_variation_sku, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'getItemByLegacyId'
     *
     * @param  string $legacy_item_id This query parameter is the unique identifier that specifies the item being retrieved.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt; Note:&lt;/b&gt; When passing in the ID for a multi-variation listing, you must also use the &lt;code&gt;legacy_variation_id&lt;/code&gt; field and pass in the ID of the specific item variation. If not, all variation within the multi-SKU listing will be retrieved.&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;The following is an example of using the value of the &lt;b&gt;ItemID&lt;/b&gt; field for a specific item to get the RESTful &lt;code&gt;itemId&lt;/code&gt; value.&lt;pre&gt;&lt;code&gt;browse/v1/item/get_item_by_legacy_id?legacy_item_id&#x3D;1**********9&lt;/code&gt;&lt;/pre&gt; (required)
     * @param  string $fieldgroups This field controls what is returned in the response. If this field is not set, the method returns all details about the item. Multiple &lt;code&gt;fieldgroups&lt;/code&gt; can be set.&lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;ul&gt;&lt;li&gt; &lt;b&gt;PRODUCT&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemByLegacyId#response.product\&quot;&gt;product&lt;/a&gt; container to the response. &lt;/li&gt;&lt;li&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt;&lt;br&gt;This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemByLegacyId#response.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $legacy_variation_id This query parameter specifies the legacy item ID of a specific item in a multi-variation listing, such as that for the &lt;i&gt;red shirt size L&lt;/i&gt; item.&lt;br&gt;&lt;br&gt;&lt;div class&#x3D;\&quot;msgbox_important\&quot;&gt;&lt;p class&#x3D;\&quot;msgbox_importantInDiv\&quot; data-mc-autonum&#x3D;\&quot;&amp;lt;b&amp;gt;&amp;lt;span style&#x3D;&amp;quot;color: #dd1e31;&amp;quot; class&#x3D;&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;\&quot;&gt;&lt;span class&#x3D;\&quot;autonumber\&quot;&gt;&lt;span&gt;&lt;b&gt;&lt;span style&#x3D;\&quot;color: #dd1e31;\&quot; class&#x3D;\&quot;mcFormatColor\&quot;&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt; A &lt;code&gt;legacy_item_id&lt;/code&gt; value must always be passed in when specifying a &lt;code&gt;legacy_variation_id&lt;/code&gt; value.&lt;/p&gt;&lt;/div&gt; (optional)
     * @param  string $legacy_variation_sku This query parameter specifies the legacy SKU of an item. SKUs are the unique identifiers of an item created by the seller.&lt;br&gt;&lt;br&gt;The following is an example of using the value of the &lt;code&gt;ItemID&lt;/code&gt; and &lt;code&gt;SKU&lt;/code&gt; fields to get the RESTful &lt;code&gt;itemId&lt;/code&gt; value.&lt;pre&gt;&lt;code&gt;browse/v1/item/get_item_by_legacy_id?legacy_item_id&#x3D;1**********9&amp;amp;legacy_variation_sku&#x3D;V**********M&lt;/code&gt;&lt;/pre&gt;&lt;div class&#x3D;\&quot;msgbox_important\&quot;&gt;&lt;p class&#x3D;\&quot;msgbox_importantInDiv\&quot; data-mc-autonum&#x3D;\&quot;&amp;lt;b&amp;gt;&amp;lt;span style&#x3D;&amp;quot;color: #dd1e31;&amp;quot; class&#x3D;&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;\&quot;&gt;&lt;span class&#x3D;\&quot;autonumber\&quot;&gt;&lt;span&gt;&lt;b&gt;&lt;span style&#x3D;\&quot;color: #dd1e31;\&quot; class&#x3D;\&quot;mcFormatColor\&quot;&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt; A &lt;code&gt;legacy_item_id&lt;/code&gt; value must always be passed in when specifying a &lt;code&gt;legacy_variation_sku&lt;/code&gt; value.&lt;/p&gt;&lt;/div&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItemByLegacyId'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getItemByLegacyIdRequest($legacy_item_id, $fieldgroups = null, $legacy_variation_id = null, $legacy_variation_sku = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItemByLegacyId'][0])
    {

        // verify the required parameter 'legacy_item_id' is set
        if ($legacy_item_id === null || (is_array($legacy_item_id) && count($legacy_item_id) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $legacy_item_id when calling getItemByLegacyId'
            );
        }








        $resourcePath = '/item/get_item_by_legacy_id';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $fieldgroups,
            'fieldgroups', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $legacy_item_id,
            'legacy_item_id', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            true // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $legacy_variation_id,
            'legacy_variation_id', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $legacy_variation_sku,
            'legacy_variation_sku', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);

        // header params
        if ($x_ebay_c_enduserctx !== null) {
            $headerParams['X-EBAY-C-ENDUSERCTX'] = ObjectSerializer::toHeaderValue($x_ebay_c_enduserctx);
        }
        // header params
        if ($x_ebay_c_marketplace_id !== null) {
            $headerParams['X-EBAY-C-MARKETPLACE-ID'] = ObjectSerializer::toHeaderValue($x_ebay_c_marketplace_id);
        }
        // header params
        if ($accept_language !== null) {
            $headerParams['Accept-Language'] = ObjectSerializer::toHeaderValue($accept_language);
        }



        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = \GuzzleHttp\Utils::jsonEncode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires OAuth (access token)
        if (!empty($this->config->getAccessToken())) {
            $headers['Authorization'] = 'Bearer ' . $this->config->getAccessToken();
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation getItems
     *
     * @param  string $item_ids A comma separated list of the unique identifiers of the items to retrieve (maximum 20).&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; In any given request, either &lt;code&gt;item_ids&lt;/code&gt; &lt;b&gt;or&lt;/b&gt; &lt;code&gt;item_group_ids&lt;/code&gt; can be retrieved. Attempting to retrieve both will result in an error.&lt;/span&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $item_group_ids A comma separated list of the unique identifiers of the item groups being retrieved (maximum 10).&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; In any given request, either &lt;code&gt;item_ids&lt;/code&gt; &lt;b&gt;or&lt;/b&gt; &lt;code&gt;item_group_ids&lt;/code&gt; can be retrieved. Attempting to retrieve both will result in an error.&lt;/span&gt;&lt;br&gt;&lt;b&gt;RESTful Group Item ID Format:&lt;/b&gt; &lt;code&gt;############&lt;/code&gt;&lt;br&gt;&lt;br&gt;For example:&lt;pre&gt;3**********9&lt;/pre&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItems'] to see the possible values for this operation
     *
     * @throws \Modstore\EbayBrowseApi\ApiException on non-2xx response or if the response body is not in the expected format
     * @throws \InvalidArgumentException
     * @return \Modstore\EbayBrowseApi\Model\Items
     */
    public function getItems($item_ids = null, $item_group_ids = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItems'][0])
    {
        list($response) = $this->getItemsWithHttpInfo($item_ids, $item_group_ids, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType);
        return $response;
    }

    /**
     * Operation getItemsWithHttpInfo
     *
     * @param  string $item_ids A comma separated list of the unique identifiers of the items to retrieve (maximum 20).&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; In any given request, either &lt;code&gt;item_ids&lt;/code&gt; &lt;b&gt;or&lt;/b&gt; &lt;code&gt;item_group_ids&lt;/code&gt; can be retrieved. Attempting to retrieve both will result in an error.&lt;/span&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $item_group_ids A comma separated list of the unique identifiers of the item groups being retrieved (maximum 10).&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; In any given request, either &lt;code&gt;item_ids&lt;/code&gt; &lt;b&gt;or&lt;/b&gt; &lt;code&gt;item_group_ids&lt;/code&gt; can be retrieved. Attempting to retrieve both will result in an error.&lt;/span&gt;&lt;br&gt;&lt;b&gt;RESTful Group Item ID Format:&lt;/b&gt; &lt;code&gt;############&lt;/code&gt;&lt;br&gt;&lt;br&gt;For example:&lt;pre&gt;3**********9&lt;/pre&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItems'] to see the possible values for this operation
     *
     * @throws \Modstore\EbayBrowseApi\ApiException on non-2xx response or if the response body is not in the expected format
     * @throws \InvalidArgumentException
     * @return array of \Modstore\EbayBrowseApi\Model\Items, HTTP status code, HTTP response headers (array of strings)
     */
    public function getItemsWithHttpInfo($item_ids = null, $item_group_ids = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItems'][0])
    {
        $request = $this->getItemsRequest($item_ids, $item_group_ids, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\Modstore\EbayBrowseApi\Model\Items' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\Modstore\EbayBrowseApi\Model\Items' !== 'string') {
                            try {
                                $content = json_decode($content, false, 512, JSON_THROW_ON_ERROR);
                            } catch (\JsonException $exception) {
                                throw new ApiException(
                                    sprintf(
                                        'Error JSON decoding server response (%s)',
                                        $request->getUri()
                                    ),
                                    $statusCode,
                                    $response->getHeaders(),
                                    $content
                                );
                            }
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Modstore\EbayBrowseApi\Model\Items', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Modstore\EbayBrowseApi\Model\Items';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    try {
                        $content = json_decode($content, false, 512, JSON_THROW_ON_ERROR);
                    } catch (\JsonException $exception) {
                        throw new ApiException(
                            sprintf(
                                'Error JSON decoding server response (%s)',
                                $request->getUri()
                            ),
                            $statusCode,
                            $response->getHeaders(),
                            $content
                        );
                    }
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Modstore\EbayBrowseApi\Model\Items',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation getItemsAsync
     *
     * @param  string $item_ids A comma separated list of the unique identifiers of the items to retrieve (maximum 20).&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; In any given request, either &lt;code&gt;item_ids&lt;/code&gt; &lt;b&gt;or&lt;/b&gt; &lt;code&gt;item_group_ids&lt;/code&gt; can be retrieved. Attempting to retrieve both will result in an error.&lt;/span&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $item_group_ids A comma separated list of the unique identifiers of the item groups being retrieved (maximum 10).&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; In any given request, either &lt;code&gt;item_ids&lt;/code&gt; &lt;b&gt;or&lt;/b&gt; &lt;code&gt;item_group_ids&lt;/code&gt; can be retrieved. Attempting to retrieve both will result in an error.&lt;/span&gt;&lt;br&gt;&lt;b&gt;RESTful Group Item ID Format:&lt;/b&gt; &lt;code&gt;############&lt;/code&gt;&lt;br&gt;&lt;br&gt;For example:&lt;pre&gt;3**********9&lt;/pre&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItems'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getItemsAsync($item_ids = null, $item_group_ids = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItems'][0])
    {
        return $this->getItemsAsyncWithHttpInfo($item_ids, $item_group_ids, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation getItemsAsyncWithHttpInfo
     *
     * @param  string $item_ids A comma separated list of the unique identifiers of the items to retrieve (maximum 20).&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; In any given request, either &lt;code&gt;item_ids&lt;/code&gt; &lt;b&gt;or&lt;/b&gt; &lt;code&gt;item_group_ids&lt;/code&gt; can be retrieved. Attempting to retrieve both will result in an error.&lt;/span&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $item_group_ids A comma separated list of the unique identifiers of the item groups being retrieved (maximum 10).&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; In any given request, either &lt;code&gt;item_ids&lt;/code&gt; &lt;b&gt;or&lt;/b&gt; &lt;code&gt;item_group_ids&lt;/code&gt; can be retrieved. Attempting to retrieve both will result in an error.&lt;/span&gt;&lt;br&gt;&lt;b&gt;RESTful Group Item ID Format:&lt;/b&gt; &lt;code&gt;############&lt;/code&gt;&lt;br&gt;&lt;br&gt;For example:&lt;pre&gt;3**********9&lt;/pre&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItems'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getItemsAsyncWithHttpInfo($item_ids = null, $item_group_ids = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItems'][0])
    {
        $returnType = '\Modstore\EbayBrowseApi\Model\Items';
        $request = $this->getItemsRequest($item_ids, $item_group_ids, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'getItems'
     *
     * @param  string $item_ids A comma separated list of the unique identifiers of the items to retrieve (maximum 20).&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; In any given request, either &lt;code&gt;item_ids&lt;/code&gt; &lt;b&gt;or&lt;/b&gt; &lt;code&gt;item_group_ids&lt;/code&gt; can be retrieved. Attempting to retrieve both will result in an error.&lt;/span&gt;&lt;br&gt;&lt;b&gt;RESTful Item ID Format: &lt;/b&gt;&lt;code&gt;v1&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;|&lt;code&gt;&lt;i&gt;#&lt;/i&gt;&lt;/code&gt;&lt;br&gt;&lt;br&gt;For a single SKU listing, pass in the item ID: &lt;pre&gt;v1|2**********2|0&lt;/pre&gt;For a multi-SKU listing, pass in the identifier of the variation:&lt;pre&gt;v1|1**********2|4**********2&lt;/pre&gt;&lt;br&gt;For more information about item IDs for RESTful APIs, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Legacy\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Item ID legacy API compatibility overview&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $item_group_ids A comma separated list of the unique identifiers of the item groups being retrieved (maximum 10).&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; In any given request, either &lt;code&gt;item_ids&lt;/code&gt; &lt;b&gt;or&lt;/b&gt; &lt;code&gt;item_group_ids&lt;/code&gt; can be retrieved. Attempting to retrieve both will result in an error.&lt;/span&gt;&lt;br&gt;&lt;b&gt;RESTful Group Item ID Format:&lt;/b&gt; &lt;code&gt;############&lt;/code&gt;&lt;br&gt;&lt;br&gt;For example:&lt;pre&gt;3**********9&lt;/pre&gt; (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItems'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getItemsRequest($item_ids = null, $item_group_ids = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItems'][0])
    {







        $resourcePath = '/item/';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $item_ids,
            'item_ids', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $item_group_ids,
            'item_group_ids', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);

        // header params
        if ($x_ebay_c_enduserctx !== null) {
            $headerParams['X-EBAY-C-ENDUSERCTX'] = ObjectSerializer::toHeaderValue($x_ebay_c_enduserctx);
        }
        // header params
        if ($x_ebay_c_marketplace_id !== null) {
            $headerParams['X-EBAY-C-MARKETPLACE-ID'] = ObjectSerializer::toHeaderValue($x_ebay_c_marketplace_id);
        }
        // header params
        if ($accept_language !== null) {
            $headerParams['Accept-Language'] = ObjectSerializer::toHeaderValue($accept_language);
        }



        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = \GuzzleHttp\Utils::jsonEncode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires OAuth (access token)
        if (!empty($this->config->getAccessToken())) {
            $headers['Authorization'] = 'Bearer ' . $this->config->getAccessToken();
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Operation getItemsByItemGroup
     *
     * @param  string $item_group_id This query parameter specifies the unique identifier of an item group for which information is to be returned. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc.&lt;br&gt;&lt;br&gt;This ID is returned in the &lt;b&gt;itemGroupHref&lt;/b&gt; field of the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item_summary/methods/search\&quot;&gt;search&lt;/a&gt; and &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem\&quot;&gt;getItem&lt;/a&gt; methods.&lt;br&gt;&lt;br&gt;&lt;b&gt;For Example:&lt;/b&gt;&lt;pre&gt;https://api.ebay.com/buy/browse/v1/item/get_items_by_item_group?item_group_id&#x3D;3**********6&lt;/pre&gt; (required)
     * @param  string $fieldgroups This field controls what is returned in the response. If this field is not set, the method returns all details about the item.&lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt; - This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemsByItemGroup#response.items.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response. (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItemsByItemGroup'] to see the possible values for this operation
     *
     * @throws \Modstore\EbayBrowseApi\ApiException on non-2xx response or if the response body is not in the expected format
     * @throws \InvalidArgumentException
     * @return \Modstore\EbayBrowseApi\Model\ItemGroup
     */
    public function getItemsByItemGroup($item_group_id, $fieldgroups = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItemsByItemGroup'][0])
    {
        list($response) = $this->getItemsByItemGroupWithHttpInfo($item_group_id, $fieldgroups, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType);
        return $response;
    }

    /**
     * Operation getItemsByItemGroupWithHttpInfo
     *
     * @param  string $item_group_id This query parameter specifies the unique identifier of an item group for which information is to be returned. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc.&lt;br&gt;&lt;br&gt;This ID is returned in the &lt;b&gt;itemGroupHref&lt;/b&gt; field of the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item_summary/methods/search\&quot;&gt;search&lt;/a&gt; and &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem\&quot;&gt;getItem&lt;/a&gt; methods.&lt;br&gt;&lt;br&gt;&lt;b&gt;For Example:&lt;/b&gt;&lt;pre&gt;https://api.ebay.com/buy/browse/v1/item/get_items_by_item_group?item_group_id&#x3D;3**********6&lt;/pre&gt; (required)
     * @param  string $fieldgroups This field controls what is returned in the response. If this field is not set, the method returns all details about the item.&lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt; - This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemsByItemGroup#response.items.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response. (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItemsByItemGroup'] to see the possible values for this operation
     *
     * @throws \Modstore\EbayBrowseApi\ApiException on non-2xx response or if the response body is not in the expected format
     * @throws \InvalidArgumentException
     * @return array of \Modstore\EbayBrowseApi\Model\ItemGroup, HTTP status code, HTTP response headers (array of strings)
     */
    public function getItemsByItemGroupWithHttpInfo($item_group_id, $fieldgroups = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItemsByItemGroup'][0])
    {
        $request = $this->getItemsByItemGroupRequest($item_group_id, $fieldgroups, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType);

        try {
            $options = $this->createHttpClientOption();
            try {
                $response = $this->client->send($request, $options);
            } catch (RequestException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    $e->getResponse() ? $e->getResponse()->getHeaders() : null,
                    $e->getResponse() ? (string) $e->getResponse()->getBody() : null
                );
            } catch (ConnectException $e) {
                throw new ApiException(
                    "[{$e->getCode()}] {$e->getMessage()}",
                    (int) $e->getCode(),
                    null,
                    null
                );
            }

            $statusCode = $response->getStatusCode();

            if ($statusCode < 200 || $statusCode > 299) {
                throw new ApiException(
                    sprintf(
                        '[%d] Error connecting to the API (%s)',
                        $statusCode,
                        (string) $request->getUri()
                    ),
                    $statusCode,
                    $response->getHeaders(),
                    (string) $response->getBody()
                );
            }

            switch($statusCode) {
                case 200:
                    if ('\Modstore\EbayBrowseApi\Model\ItemGroup' === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ('\Modstore\EbayBrowseApi\Model\ItemGroup' !== 'string') {
                            try {
                                $content = json_decode($content, false, 512, JSON_THROW_ON_ERROR);
                            } catch (\JsonException $exception) {
                                throw new ApiException(
                                    sprintf(
                                        'Error JSON decoding server response (%s)',
                                        $request->getUri()
                                    ),
                                    $statusCode,
                                    $response->getHeaders(),
                                    $content
                                );
                            }
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, '\Modstore\EbayBrowseApi\Model\ItemGroup', []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
            }

            $returnType = '\Modstore\EbayBrowseApi\Model\ItemGroup';
            if ($returnType === '\SplFileObject') {
                $content = $response->getBody(); //stream goes to serializer
            } else {
                $content = (string) $response->getBody();
                if ($returnType !== 'string') {
                    try {
                        $content = json_decode($content, false, 512, JSON_THROW_ON_ERROR);
                    } catch (\JsonException $exception) {
                        throw new ApiException(
                            sprintf(
                                'Error JSON decoding server response (%s)',
                                $request->getUri()
                            ),
                            $statusCode,
                            $response->getHeaders(),
                            $content
                        );
                    }
                }
            }

            return [
                ObjectSerializer::deserialize($content, $returnType, []),
                $response->getStatusCode(),
                $response->getHeaders()
            ];

        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = ObjectSerializer::deserialize(
                        $e->getResponseBody(),
                        '\Modstore\EbayBrowseApi\Model\ItemGroup',
                        $e->getResponseHeaders()
                    );
                    $e->setResponseObject($data);
                    break;
            }
            throw $e;
        }
    }

    /**
     * Operation getItemsByItemGroupAsync
     *
     * @param  string $item_group_id This query parameter specifies the unique identifier of an item group for which information is to be returned. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc.&lt;br&gt;&lt;br&gt;This ID is returned in the &lt;b&gt;itemGroupHref&lt;/b&gt; field of the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item_summary/methods/search\&quot;&gt;search&lt;/a&gt; and &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem\&quot;&gt;getItem&lt;/a&gt; methods.&lt;br&gt;&lt;br&gt;&lt;b&gt;For Example:&lt;/b&gt;&lt;pre&gt;https://api.ebay.com/buy/browse/v1/item/get_items_by_item_group?item_group_id&#x3D;3**********6&lt;/pre&gt; (required)
     * @param  string $fieldgroups This field controls what is returned in the response. If this field is not set, the method returns all details about the item.&lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt; - This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemsByItemGroup#response.items.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response. (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItemsByItemGroup'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getItemsByItemGroupAsync($item_group_id, $fieldgroups = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItemsByItemGroup'][0])
    {
        return $this->getItemsByItemGroupAsyncWithHttpInfo($item_group_id, $fieldgroups, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType)
            ->then(
                function ($response) {
                    return $response[0];
                }
            );
    }

    /**
     * Operation getItemsByItemGroupAsyncWithHttpInfo
     *
     * @param  string $item_group_id This query parameter specifies the unique identifier of an item group for which information is to be returned. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc.&lt;br&gt;&lt;br&gt;This ID is returned in the &lt;b&gt;itemGroupHref&lt;/b&gt; field of the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item_summary/methods/search\&quot;&gt;search&lt;/a&gt; and &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem\&quot;&gt;getItem&lt;/a&gt; methods.&lt;br&gt;&lt;br&gt;&lt;b&gt;For Example:&lt;/b&gt;&lt;pre&gt;https://api.ebay.com/buy/browse/v1/item/get_items_by_item_group?item_group_id&#x3D;3**********6&lt;/pre&gt; (required)
     * @param  string $fieldgroups This field controls what is returned in the response. If this field is not set, the method returns all details about the item.&lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt; - This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemsByItemGroup#response.items.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response. (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItemsByItemGroup'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getItemsByItemGroupAsyncWithHttpInfo($item_group_id, $fieldgroups = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItemsByItemGroup'][0])
    {
        $returnType = '\Modstore\EbayBrowseApi\Model\ItemGroup';
        $request = $this->getItemsByItemGroupRequest($item_group_id, $fieldgroups, $x_ebay_c_enduserctx, $x_ebay_c_marketplace_id, $accept_language, $contentType);

        return $this->client
            ->sendAsync($request, $this->createHttpClientOption())
            ->then(
                function ($response) use ($returnType) {
                    if ($returnType === '\SplFileObject') {
                        $content = $response->getBody(); //stream goes to serializer
                    } else {
                        $content = (string) $response->getBody();
                        if ($returnType !== 'string') {
                            $content = json_decode($content);
                        }
                    }

                    return [
                        ObjectSerializer::deserialize($content, $returnType, []),
                        $response->getStatusCode(),
                        $response->getHeaders()
                    ];
                },
                function ($exception) {
                    $response = $exception->getResponse();
                    $statusCode = $response->getStatusCode();
                    throw new ApiException(
                        sprintf(
                            '[%d] Error connecting to the API (%s)',
                            $statusCode,
                            $exception->getRequest()->getUri()
                        ),
                        $statusCode,
                        $response->getHeaders(),
                        (string) $response->getBody()
                    );
                }
            );
    }

    /**
     * Create request for operation 'getItemsByItemGroup'
     *
     * @param  string $item_group_id This query parameter specifies the unique identifier of an item group for which information is to be returned. An item group is an item that has various aspect differences, such as color, size, storage capacity, etc.&lt;br&gt;&lt;br&gt;This ID is returned in the &lt;b&gt;itemGroupHref&lt;/b&gt; field of the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item_summary/methods/search\&quot;&gt;search&lt;/a&gt; and &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItem\&quot;&gt;getItem&lt;/a&gt; methods.&lt;br&gt;&lt;br&gt;&lt;b&gt;For Example:&lt;/b&gt;&lt;pre&gt;https://api.ebay.com/buy/browse/v1/item/get_items_by_item_group?item_group_id&#x3D;3**********6&lt;/pre&gt; (required)
     * @param  string $fieldgroups This field controls what is returned in the response. If this field is not set, the method returns all details about the item.&lt;br&gt;&lt;br&gt;&lt;b&gt;Valid Values:&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;b&gt;ADDITIONAL_SELLER_DETAILS&lt;/b&gt; - This field group adds the &lt;a href&#x3D;\&quot;/api-docs/buy/browse/resources/item/methods/getItemsByItemGroup#response.items.seller.userId\&quot;&gt;userId&lt;/a&gt; field to the response. (optional)
     * @param  string $x_ebay_c_enduserctx This header is required to support revenue sharing for eBay Partner Network and to improve the accuracy of shipping and delivery time estimations.&lt;br&gt;&lt;br&gt;For additional information, refer to &lt;a href&#x3D;\&quot;/api-docs/buy/static/api-browse.html#Headers\&quot; target&#x3D;\&quot;_blank \&quot;&gt;Use request headers&lt;/a&gt; in the &lt;a href&#x3D;\&quot;/api-docs/buy/static/buying-ig-landing.html\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Buying Integration Guide&lt;/a&gt;. (optional)
     * @param  string $x_ebay_c_marketplace_id This header identifies the seller&#39;s eBay marketplace. It is required for all marketplaces outside of the US.&lt;br&gt;&lt;br&gt;&lt;span class&#x3D;\&quot;tablenote\&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; If a marketplace ID value is not provided, the default value of &lt;code&gt;EBAY_US&lt;/code&gt; is used.&lt;/span&gt;&lt;br&gt;See &lt;a href&#x3D;\&quot;/api-docs/buy/browse/types/ba:MarketplaceIdEnum\&quot; target&#x3D;\&quot;_blank\&quot;&gt;MarketplaceIdEnum&lt;/a&gt; for a list of supported marketplaces. (optional)
     * @param  string $accept_language This header is used to indicate the natural language and locale preferred by the user for the response.&lt;br&gt;&lt;br&gt;This header is required when targeting a specific locale of a marketplace that supports multiple locales. For example:&lt;ul&gt;&lt;li&gt;When targeting the French locale of the Belgium marketplace, it is required to pass in &lt;code&gt;fr-BE&lt;/code&gt; to specify this. If this locale is not specified, the language will default to Dutch.&lt;/li&gt;&lt;li&gt;When targeting the French locale of the Canadian marketplace, it is required to pass in &lt;code&gt;fr-CA&lt;/code&gt; to specify this. If this locale is not specified, the language will default to English.&lt;/li&gt;&lt;/ul&gt; (optional)
     * @param  string $contentType The value for the Content-Type header. Check self::contentTypes['getItemsByItemGroup'] to see the possible values for this operation
     *
     * @throws \InvalidArgumentException
     * @return \GuzzleHttp\Psr7\Request
     */
    public function getItemsByItemGroupRequest($item_group_id, $fieldgroups = null, $x_ebay_c_enduserctx = null, $x_ebay_c_marketplace_id = null, $accept_language = null, string $contentType = self::contentTypes['getItemsByItemGroup'][0])
    {

        // verify the required parameter 'item_group_id' is set
        if ($item_group_id === null || (is_array($item_group_id) && count($item_group_id) === 0)) {
            throw new \InvalidArgumentException(
                'Missing the required parameter $item_group_id when calling getItemsByItemGroup'
            );
        }






        $resourcePath = '/item/get_items_by_item_group';
        $formParams = [];
        $queryParams = [];
        $headerParams = [];
        $httpBody = '';
        $multipart = false;

        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $fieldgroups,
            'fieldgroups', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            false // required
        ) ?? []);
        // query params
        $queryParams = array_merge($queryParams, ObjectSerializer::toQueryValue(
            $item_group_id,
            'item_group_id', // param base name
            'string', // openApiType
            'form', // style
            true, // explode
            true // required
        ) ?? []);

        // header params
        if ($x_ebay_c_enduserctx !== null) {
            $headerParams['X-EBAY-C-ENDUSERCTX'] = ObjectSerializer::toHeaderValue($x_ebay_c_enduserctx);
        }
        // header params
        if ($x_ebay_c_marketplace_id !== null) {
            $headerParams['X-EBAY-C-MARKETPLACE-ID'] = ObjectSerializer::toHeaderValue($x_ebay_c_marketplace_id);
        }
        // header params
        if ($accept_language !== null) {
            $headerParams['Accept-Language'] = ObjectSerializer::toHeaderValue($accept_language);
        }



        $headers = $this->headerSelector->selectHeaders(
            ['application/json', ],
            $contentType,
            $multipart
        );

        // for model (json/xml)
        if (count($formParams) > 0) {
            if ($multipart) {
                $multipartContents = [];
                foreach ($formParams as $formParamName => $formParamValue) {
                    $formParamValueItems = is_array($formParamValue) ? $formParamValue : [$formParamValue];
                    foreach ($formParamValueItems as $formParamValueItem) {
                        $multipartContents[] = [
                            'name' => $formParamName,
                            'contents' => $formParamValueItem
                        ];
                    }
                }
                // for HTTP post (form)
                $httpBody = new MultipartStream($multipartContents);

            } elseif (stripos($headers['Content-Type'], 'application/json') !== false) {
                # if Content-Type contains "application/json", json_encode the form parameters
                $httpBody = \GuzzleHttp\Utils::jsonEncode($formParams);
            } else {
                // for HTTP post (form)
                $httpBody = ObjectSerializer::buildQuery($formParams);
            }
        }

        // this endpoint requires OAuth (access token)
        if (!empty($this->config->getAccessToken())) {
            $headers['Authorization'] = 'Bearer ' . $this->config->getAccessToken();
        }

        $defaultHeaders = [];
        if ($this->config->getUserAgent()) {
            $defaultHeaders['User-Agent'] = $this->config->getUserAgent();
        }

        $headers = array_merge(
            $defaultHeaders,
            $headerParams,
            $headers
        );

        $operationHost = $this->config->getHost();
        $query = ObjectSerializer::buildQuery($queryParams);
        return new Request(
            'GET',
            $operationHost . $resourcePath . ($query ? "?{$query}" : ''),
            $headers,
            $httpBody
        );
    }

    /**
     * Create http client option
     *
     * @throws \RuntimeException on file opening failure
     * @return array of http client options
     */
    protected function createHttpClientOption()
    {
        $options = [];
        if ($this->config->getDebug()) {
            $options[RequestOptions::DEBUG] = fopen($this->config->getDebugFile(), 'a');
            if (!$options[RequestOptions::DEBUG]) {
                throw new \RuntimeException('Failed to open the debug file: ' . $this->config->getDebugFile());
            }
        }

        return $options;
    }
}
